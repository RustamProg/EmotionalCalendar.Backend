// <auto-generated />
using System;
using EmotionalCalendar.Backend.AppDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmotionalCalendar.Backend.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210930025441_UniqueEmotionName")]
    partial class UniqueEmotionName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmotionalCalendar.Backend.Models.ApplicationUserModels.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("EmotionalCalendar.Backend.Models.EmotionEventModels.DailyEmotion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EmotionId")
                        .HasColumnType("bigint");

                    b.Property<int>("EmotionRate")
                        .HasColumnType("int");

                    b.Property<long?>("EventNoteId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmotionId");

                    b.HasIndex("EventNoteId");

                    b.ToTable("DailyEmotions");
                });

            modelBuilder.Entity("EmotionalCalendar.Backend.Models.EmotionEventModels.Emotion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlueColor")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GreenColor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RedColor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Emotions");
                });

            modelBuilder.Entity("EmotionalCalendar.Backend.Models.EmotionEventModels.EventNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventNotes");
                });

            modelBuilder.Entity("EmotionalCalendar.Backend.Models.EmotionEventModels.DailyEmotion", b =>
                {
                    b.HasOne("EmotionalCalendar.Backend.Models.EmotionEventModels.Emotion", "Emotion")
                        .WithMany("DailyEmotions")
                        .HasForeignKey("EmotionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmotionalCalendar.Backend.Models.EmotionEventModels.EventNote", "EventNote")
                        .WithMany("DailyEmotions")
                        .HasForeignKey("EventNoteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Emotion");

                    b.Navigation("EventNote");
                });

            modelBuilder.Entity("EmotionalCalendar.Backend.Models.EmotionEventModels.Emotion", b =>
                {
                    b.Navigation("DailyEmotions");
                });

            modelBuilder.Entity("EmotionalCalendar.Backend.Models.EmotionEventModels.EventNote", b =>
                {
                    b.Navigation("DailyEmotions");
                });
#pragma warning restore 612, 618
        }
    }
}
